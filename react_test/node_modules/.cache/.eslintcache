[{"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\index.js":"1","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\App.js":"2","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\reportWebVitals.js":"3","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DiceRollButton.js":"4","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillSection.js":"5","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillRow.js":"6","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilitySection.js":"7","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilityBox.js":"8","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SingleRollResult.js":"9","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\RollResultsSection.js":"10","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\HealthSection.js":"11","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterSheet.js":"12","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\StaticStatsBox.js":"13","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRoller.js":"14","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterInventoryArea.js":"15","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrowSection.js":"16","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrow.js":"17","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DefensesConditionsBox.js":"18","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MapSection.js":"19","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Map.js":"20","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderBox.js":"21","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderItem.js":"22","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chatbox.js":"23","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chat.js":"24","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ChatMessage.js":"25","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLog.js":"26","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLogMessage.js":"27","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterSheet.js":"28","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroup.js":"29","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroupForm.js":"30","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterCreator.js":"31","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ActionsMenu.js":"32","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRollButton.js":"33","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsMenu.js":"34","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsLevelSection.js":"35","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventoryMenu.js":"36","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventorySection.js":"37","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\NotesMenu.js":"38","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\FeaturesMenu.js":"39","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SetRollResultsContext.js":"40","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Contexts.js":"41"},{"size":536,"mtime":1699034410573,"results":"42","hashOfConfig":"43"},{"size":4907,"mtime":1707179106336,"results":"44","hashOfConfig":"43"},{"size":362,"mtime":1699032879980,"results":"45","hashOfConfig":"43"},{"size":1740,"mtime":1707178948612,"results":"46","hashOfConfig":"43"},{"size":1001,"mtime":1706681453156,"results":"47","hashOfConfig":"43"},{"size":666,"mtime":1707179051097,"results":"48","hashOfConfig":"43"},{"size":1680,"mtime":1707178964977,"results":"49","hashOfConfig":"43"},{"size":621,"mtime":1707178906722,"results":"50","hashOfConfig":"43"},{"size":1074,"mtime":1706932468924,"results":"51","hashOfConfig":"43"},{"size":2093,"mtime":1706932059663,"results":"52","hashOfConfig":"43"},{"size":3258,"mtime":1706541725975,"results":"53","hashOfConfig":"43"},{"size":2199,"mtime":1706930415075,"results":"54","hashOfConfig":"43"},{"size":1915,"mtime":1707178626339,"results":"55","hashOfConfig":"43"},{"size":3759,"mtime":1706914492171,"results":"56","hashOfConfig":"43"},{"size":1074,"mtime":1706908812486,"results":"57","hashOfConfig":"43"},{"size":2755,"mtime":1706336087014,"results":"58","hashOfConfig":"43"},{"size":563,"mtime":1707179215390,"results":"59","hashOfConfig":"43"},{"size":985,"mtime":1706476159728,"results":"60","hashOfConfig":"43"},{"size":536,"mtime":1706851066676,"results":"61","hashOfConfig":"43"},{"size":156,"mtime":1706506468897,"results":"62","hashOfConfig":"43"},{"size":2410,"mtime":1706853113793,"results":"63","hashOfConfig":"43"},{"size":475,"mtime":1706853327222,"results":"64","hashOfConfig":"43"},{"size":531,"mtime":1706541685434,"results":"65","hashOfConfig":"43"},{"size":1917,"mtime":1706741714592,"results":"66","hashOfConfig":"43"},{"size":256,"mtime":1706506142499,"results":"67","hashOfConfig":"43"},{"size":1157,"mtime":1706505418986,"results":"68","hashOfConfig":"43"},{"size":313,"mtime":1706504862643,"results":"69","hashOfConfig":"43"},{"size":4964,"mtime":1707163923123,"results":"70","hashOfConfig":"43"},{"size":8125,"mtime":1707179409498,"results":"71","hashOfConfig":"43"},{"size":13815,"mtime":1707176857563,"results":"72","hashOfConfig":"43"},{"size":6349,"mtime":1706819296899,"results":"73","hashOfConfig":"43"},{"size":2514,"mtime":1706745866395,"results":"74","hashOfConfig":"43"},{"size":1066,"mtime":1706911504957,"results":"75","hashOfConfig":"43"},{"size":3044,"mtime":1707150673311,"results":"76","hashOfConfig":"43"},{"size":4163,"mtime":1706907966728,"results":"77","hashOfConfig":"43"},{"size":3417,"mtime":1706890687535,"results":"78","hashOfConfig":"43"},{"size":2869,"mtime":1706900152110,"results":"79","hashOfConfig":"43"},{"size":1786,"mtime":1706902134390,"results":"80","hashOfConfig":"43"},{"size":2092,"mtime":1706911539226,"results":"81","hashOfConfig":"43"},{"size":92,"mtime":1707177489392,"results":"82","hashOfConfig":"43"},{"size":210,"mtime":1707178083389,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"1dx4dds",{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"87"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"87"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"87"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"87"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"87"},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\index.js",[],[],["217"],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\App.js",["218","219","220"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\reportWebVitals.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DiceRollButton.js",["221","222"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillSection.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillRow.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilitySection.js",["223","224","225"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilityBox.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SingleRollResult.js",["226"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\RollResultsSection.js",["227"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\HealthSection.js",["228"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Stack, Button } from 'react-bootstrap';\r\n\r\nfunction HealthSection () {\r\n  const [healthval, setHealthVal] = useState({\r\n    currenthealth: 11,\r\n    maxhealth: 22\r\n  })\r\n\r\n  const [healthmod, setHealthMod] = useState(0);\r\n\r\n  useEffect(() => {  \r\n      getHealth();\r\n    }, []\r\n  ); \r\n\r\n  useEffect(() => {\r\n      setHealth();\r\n    }, [healthval.currenthealth]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(`healthmod ${healthmod}`); \r\n    }, [healthmod]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    console.log(`healthmod ${healthmod}`);\r\n    setHealthMod(e.target.value);\r\n    console.log(`healthmod ${healthmod}`);\r\n  }\r\n\r\n  const updateHealth = (option) => {\r\n    /*let newhealthobj = {\r\n      currenthealth: healthval.currenthealth,\r\n      maxhealth: healthval.maxhealth\r\n    }*/\r\n    let currenthealth = Number(healthval.currenthealth);\r\n    let newhealth = 0;\r\n    if (option === 'heal') {\r\n      newhealth = Number(currenthealth) + Number(healthmod);\r\n      console.log(`${newhealth} = ${currenthealth} + ${healthmod}`)\r\n    } else if (option === 'damage') {\r\n      console.log(`${newhealth} = ${currenthealth} - ${healthmod}`)\r\n      newhealth = Number(currenthealth) - Number(healthmod);\r\n    } else {\r\n      throw \"Shit's fucked brothers!\";\r\n    }\r\n    //newhealthobj.currenthealth = newhealth;\r\n    setHealthVal({...healthval, currenthealth: newhealth});\r\n    console.log(\"Current Health: \" + currenthealth + \"  HealthMod: \" + healthmod + \" NewHealth: \" + newhealth);\r\n    //addLogEntry(`Health: ${currenthealth} -> ${newhealth}`);\r\n    //document.getElementById(\"currentHealth\").value = newhealth;\r\n  }\r\n\r\n  const getHealth = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=health`)\r\n    .then(res => res.json())\r\n    .then(res => setHealthVal(res));\r\n  }\r\n\r\n  const setHealth = () => {\r\n    console.log('sethealth');\r\n    //fetch(`http://localhost:9000/sendcharacterinfo?infotype=health&currenthealth=${healthval.currenthealth}`);\r\n  }\r\n\r\n  return ( \r\n    <div className=\"healthSection frontElement\">\r\n      <Stack className=\"leftHealthSection\" direction=\"vertical\" gap={2}>\r\n        <Button variant='secondary' size='sm' onClick={() => updateHealth('heal')} >Heal</Button>\r\n        <input type='number' size=\"4\" onChange={(e) => handleChange(e)}></input>\r\n        <Button variant='secondary' size='sm' onClick={() => updateHealth('damage')} >Damage</Button>\r\n      </Stack>\r\n      <div className=\"rightHealthSection\">\r\n        <span className='characterSheetSectionTitle'>Hit Points</span>\r\n        <Stack direction=\"horizontal\" gap={1}>\r\n          <div className=\"healthBox\">\r\n            <label htmlFor=\"currenthealth\">Current</label>\r\n            <input name=\"currenthealth\" type=\"number\" size=\"4\" value={healthval.currenthealth} onChange={(e) => setHealthVal({...healthval, currenthealth: e.target.value})}></input>\r\n          </div>\r\n          <div className=\"healthBox\">\r\n            <label htmlFor=\"maxhealth\">Max</label>\r\n            <input name=\"maxhealth\" type=\"number\" size=\"4\" readOnly={true} value={healthval.maxhealth}></input>\r\n          </div>\r\n        </Stack>\r\n      </div>\r\n      \r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default HealthSection;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterSheet.js",["229"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\StaticStatsBox.js",["230","231"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRoller.js",["232","233","234"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterInventoryArea.js",["235","236"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrowSection.js",["237","238","239"],[],"/*\r\n  return ( \r\n    <div className=\"characterSavingThrowSection frontElement\">\r\n      <Stack className=\"characterSavingThrowLeft\" direction=\"vertical\" gap={1}>\r\n        <div className=\"characterSavingThrow\"></div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Stack, Button } from 'react-bootstrap';\r\nimport DiceRollButton from './DiceRollButton'\r\nimport SavingThrow from './SavingThrow';\r\n\r\nfunction SavingThrowSection ({setRollResults}) { \r\n  const [savingthrows, setSavingThrows] = useState([\r\n    {\r\n      name: 'STR',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'DEX',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'CON',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'INT',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'WIS',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'CHA',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    ]);\r\n\r\n  useEffect(() => {  \r\n      getStats();\r\n    }, []\r\n  )\r\n\r\n\r\n  const getStats = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=savingthrow`)\r\n    .then(res => res.json())\r\n    .then(res => setSavingThrows(res));\r\n  }\r\n\r\n  return (\r\n    /* \r\n    <div className=\"staticStatsBox frontElement\">\r\n      <Stack className=\"statsContainer senses\" gap={1}>\r\n        <div>Perception - {staticstats.perception}</div>\r\n        <div>Investigation - {staticstats.investigation}</div>\r\n        <div>Insight - {staticstats.insight}</div>\r\n      </Stack>\r\n      <Stack className=\"statsContainer generalStats\" gap={1}>\r\n        <div>Proficiency Bonus - {staticstats.profbonus}</div>\r\n        <div>Speed - {staticstats.speed}</div>\r\n        <div>Initiative - <DiceRollButton name=\"Initiative\" rolltype=\"Stat\" die=\"20\" num=\"1\" mod={staticstats.initiative} setRollResults={setRollResults}>{staticstats.initiative}</DiceRollButton></div>\r\n        <div>Armor Class - {staticstats.armorclass}</div>\r\n      </Stack>\r\n      <Stack className=\"statsContainer proficiencies\">\r\n        <div>Armor - {staticstats.armor}</div>\r\n        <div>Weapons - {staticstats.weapons}</div>\r\n        <div>Tools - {staticstats.tools}</div>\r\n        <div>Languages - {staticstats.languages}</div>\r\n      </Stack>\r\n    </div>\r\n    */\r\n    <div className=\"characterSavingThrowSectionBox frontElement\">\r\n      <span className='characterSheetSectionTitle'>Saving Throws</span>\r\n      <div className=\"characterSavingThrowSection\">\r\n        {savingthrows.map((savingthrow) => <SavingThrow key={savingthrow.name} name={savingthrow.name} prof={savingthrow.prof} val={savingthrow.val} setRollResults={setRollResults}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavingThrowSection;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrow.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DefensesConditionsBox.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MapSection.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Map.js",["240"],[],"function Map() {\r\n\r\n  const MapCanvas = props => <canvas {...props}/>\r\n\r\n  return ( \r\n    <div>\r\n      MapCanvas\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderBox.js",["241"],[],"import { useState, useEffect, useCallback} from \"react\";\r\nimport TurnOrderItem from \"./TurnOrderItem\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction TurnOrder() {\r\n  const [turnorder, setTurnOrder] = useState([\r\n    /*\r\n    {\r\n      id: 0,\r\n      name: \"Jerome\",\r\n      initiative: 17,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Dylan\",\r\n      initiative: 15,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Greg\",\r\n      initiative: 15,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Rebecca\",\r\n      initiative: 14,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Jauffre\",\r\n      initiative: 12,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Erica\",\r\n      initiative: 11,\r\n    },\r\n    */\r\n  ]);\r\n\r\n  const [currentturn, setCurrentTurn] = useState(0);\r\n\r\n  const changeTurn = (mode) => {\r\n    let turnorderlength = turnorder.length;\r\n    let newturn = currentturn;\r\n    if (mode === \"next\") {\r\n      newturn = (newturn + 1) % turnorderlength;\r\n    } else if (mode === \"prev\") {\r\n      newturn = (newturn - 1 + turnorderlength) % turnorderlength;\r\n    }\r\n    setCurrentTurn(newturn);\r\n    console.log(newturn);\r\n  }\r\n\r\n  useEffect(() => {  \r\n    getTurnOrder();\r\n    }, []\r\n  )\r\n\r\n\r\n  const getTurnOrder = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=turnorder`)\r\n    .then(res => res.json())\r\n    .then(res => setTurnOrder([...res].sort((a,b) => {console.log(`sortmode a=${a.initiative} b=${b.initiative}`);return b.initiative - a.initiative})));\r\n  }\r\n\r\n  const removeTurnOrderItem = (nametoremove, initiative) => {\r\n    setTurnOrder(turnorder.filter((turn) => turn.name !== nametoremove || turn.initiative !== initiative))\r\n  }\r\n  \r\n\r\n  return ( \r\n    <div className=\"turnOrderBox frontElement\">\r\n      <div className=\"turnOrderList\">\r\n        {turnorder && turnorder.map((turn, index) => <TurnOrderItem key={index} name={turn.name} initiative={turn.initiative} currentturn={index === currentturn?true:false} removeItem={removeTurnOrderItem}/>)}\r\n      </div>\r\n      <div className=\"turnOrderButtons\">\r\n        <div className=\"turnOrderControlButtons\">\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={() => changeTurn(\"prev\")}>Prev</Button>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={() => changeTurn(\"next\")}>Next</Button>\r\n        </div>\r\n        <Button variant=\"secondary\" size=\"sm\">Clear</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TurnOrder;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderItem.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chatbox.js",["242","243"],[],"import { useEffect, useState } from 'react';\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport Chat from './Chat';\r\nimport GameLog from './GameLog';\r\n\r\nfunction Chatbox() {\r\n\r\n  return ( \r\n    <div className=\"chatBox frontElement\">\r\n      <Tabs defaultActiveKey=\"chat\" className=\"chatTabs\">\r\n        <Tab eventKey=\"chat\" title=\"Chat\">\r\n          <Chat></Chat>\r\n        </Tab>\r\n        <Tab eventKey=\"log\" title=\"Log\">\r\n          <GameLog></GameLog>\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chat.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ChatMessage.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLog.js",["244","245"],[],"import { useState, useEffect } from 'react';\r\nimport GameLogMessage from './GameLogMessage';\r\n\r\nfunction GameLog() {\r\n\r\n  const [logmessages, setLogMessages] = useState([\r\n    {\r\n      id: 0,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 1,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 2,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 3,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n  ]);\r\n\r\n  /*\r\n  useEffect(() => {  \r\n    getLog();\r\n    }, []\r\n  );\r\n\r\n\r\n  const getLog = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=log`)\r\n    .then(res => res.json())\r\n    .then(res => setLogMessages(res));\r\n  }\r\n  */\r\n  return ( \r\n    <div className=\"gameLogInnerBox\">\r\n      {logmessages.map((message) => <GameLogMessage key={message.id} character={message.character} type={message.type} text={message.text}/>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameLog;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLogMessage.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterSheet.js",["246"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroup.js",["247","248"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroupForm.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterCreator.js",["249","250","251","252"],[],"import { useState, useEffect } from 'react';\r\nimport { Nav, Tab, Tabs, Table, Button } from 'react-bootstrap';\r\nimport AbilityBox from './AbilityBox';\r\nimport AbilitySection from './AbilitySection';\r\n\r\nfunction CharacterCreator() {\r\n  \r\n  const [tempvalues, settempvalues] = useState([0,0,0,0,0,0]); \r\n\r\n  const [selectabilities, setSelectAbilities] = useState([\"-\", \"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"]);\r\n\r\n  const [abilities, setAbilityScores] = useState([\r\n    {\r\n      abilityname: \"Strength\",\r\n      abilityabbrev: \"STR\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Dexterity\",\r\n      abilityabbrev: \"DEX\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Constitution\",\r\n      abilityabbrev: \"CON\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Intelligence\",\r\n      abilityabbrev: \"INT\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Wisdom\",\r\n      abilityabbrev: \"WIS\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Charisma\",\r\n      abilityabbrev: \"CHA\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setAbilities();\r\n    }, [abilities]\r\n  );\r\n\r\n\r\n  const setAbilities = () => {\r\n    console.log(\"Setting ability scores on server\");\r\n  }\r\n\r\n  // This function should hide the option currently selected by each dropdown from the list of options of the other dropdowns, and should show the options again when they aren't selected anywhere\r\n  const updateSelections = (e) => {\r\n    let a = e.target.value;\r\n    setSelectAbilities(selectabilities.filter(item => item !== a || item === '-'));\r\n    \r\n    console.log(a);\r\n  }\r\n\r\n\r\n  const setAbilityValues = () => {\r\n    \r\n  }\r\n\r\n  return (  \r\n    <div className=\"characterCreator\">\r\n      <Tabs className='characterCreatorTabs frontElement' defaultActiveKey=\"race\">\r\n        <Tab eventKey=\"race\" title=\"Race\">\r\n          <div className='characterCreatorSection characterCreatorRace frontElement'>\r\n            <Tab.Container defaultActiveKey=\"dragonborn\">\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"dragonborn\">Dragonborn</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"dwarf\">Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"hilldwarf\">Hill Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"mountaindwarf\">Mountain Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"highelf\">High Elf</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Tab.Content>\r\n                <Tab.Pane className=\"characterCreatorTabContent\" eventKey=\"dragonborn\">\r\n                  <div className=\"characterCreatorTabContent\">\r\n                    <Table size='sm'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Dragon</th>\r\n                          <th>Damage Type</th>\r\n                          <th>Breath Weapon</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Black</td>\r\n                          <td>Acid</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Blue</td>\r\n                          <td>Lightning</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Brass</td>\r\n                          <td>Fire</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Bronze</td>\r\n                          <td>Lightning</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"dwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"hilldwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"mountaindwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"high elf\">\r\n\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Tab.Container>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"class\" title=\"Class\">\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"abilities\" title=\"Abilities\">\r\n          <div className='characterCreatorSection characterCreatorAbilities frontElement'>\r\n            <div className=\"abilityContainer abilityContainerDisplay frontElement\">\r\n              {abilities.map((ability, index) => \r\n                <div className=\"abilityBox\" key={index}>\r\n                  <div className=\"abilityLabel\">{ability.abilityabbrev}</div>\r\n                  <div className=\"abilityModDisplay\">{ability.abilityscore}</div>\r\n                  <div className=\"oval\">\r\n                    <h4>{ability.abilitybonus}</h4>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"abilityContainer abilityContainerRoll frontElement\">\r\n              {tempvalues.map((temp, index) => \r\n                <div className=\"abilityBox\" key={index}>\r\n                  <Button>{temp}</Button>\r\n                  <select onChange={(e) => {updateSelections(e)}}>\r\n                    {selectabilities.map((ability, index) => <option key={index} value={ability}>{ability}</option>)}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <Button onClick={() => {setAbilityValues()}}>Set</Button>\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"equipment\" title=\"Equipment\">\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"description\" title=\"Description\">\r\n\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterCreator;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ActionsMenu.js",["253"],[],"import { Table } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DiceRollButton from \"./DiceRollButton\";\r\n\r\n\r\nfunction ActionsMenu({setRollResults}) {\r\n\r\n  \r\n  const [actions, setActions] = useState([\r\n    {\r\n      name: \"Mace\",\r\n      range: \"5 ft\",\r\n      hitdc: 5,\r\n      effectdie: 12,\r\n      effectdienum: 1,\r\n      effectbonus: 3,\r\n      notes: \"Simple\",\r\n    },\r\n    {\r\n      name: \"Dagger\",\r\n      range: \"20 (60)\",\r\n      hitdc: 6,\r\n      effectdie: 4,\r\n      effectdienum: 1,\r\n      effectbonus: 3,\r\n      notes: \"Simple, Light, Thrown\",\r\n    },\r\n    {\r\n      name: \"Unarmed Strike\",\r\n      range: \"5 ft\",\r\n      hitdc: 5,\r\n      effectdie: 0,\r\n      effectdienum: 0,\r\n      effectbonus: 4,\r\n      notes: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    getActions();\r\n  }, []\r\n  );\r\n\r\n  // Gets actions from the server\r\n  const getActions = () => {\r\n    console.log(\"Getting actions!\");\r\n  }\r\n\r\n  const modPos = (bonus) => {\r\n    if (bonus > 0) {\r\n      return `+ ${bonus}`;\r\n    } else if (bonus < 0) {\r\n      return `- ${bonus}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n\r\n  return ( \r\n    <div className=\"actionsMenu characterInventoryAreaSection\">\r\n      <div className=\"actionsSection\">\r\n        <span className=\"characterSheetSectionTitle\">Actions</span>\r\n        <Table size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Range</th>\r\n              <th>Hit/DC</th>\r\n              <th>Effect</th>\r\n              <th>Notes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {actions.map((action, index) => \r\n              <tr key={index}>\r\n                <td>{action.name}</td>\r\n                <td>{action.range}</td>\r\n                <td><DiceRollButton name={action.name} rolltype={\"Attack\"} die={20} num={1} mod={action.hitdc} setRollResults={setRollResults} text={action.hitdc}></DiceRollButton></td>\r\n                <td><DiceRollButton name={action.name} rolltype={\"Damage\"} die={action.effectdie} num={action.effectdienum} mod={action.effectbonus} setRollResults={setRollResults} text={`${action.effectdienum}d${action.effectdie} ${modPos(action.effectbonus)} `}></DiceRollButton></td>\r\n                <td>{action.notes}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"bonusActionsSection\">\r\n        <span className=\"characterSheet\">Actions</span>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionsMenu;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRollButton.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsMenu.js",["254","255","256","257","258","259"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsLevelSection.js",["260","261","262","263","264"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventoryMenu.js",["265"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventorySection.js",["266"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\NotesMenu.js",["267","268"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\FeaturesMenu.js",["269","270"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SetRollResultsContext.js",["271"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Contexts.js",[],[],["272"],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":6,"column":8,"nodeType":"277","messageId":"278","endLine":6,"endColumn":22},{"ruleId":"275","severity":1,"message":"279","line":13,"column":8,"nodeType":"277","messageId":"278","endLine":13,"endColumn":18},{"ruleId":"275","severity":1,"message":"280","line":14,"column":8,"nodeType":"277","messageId":"278","endLine":14,"endColumn":24},{"ruleId":"275","severity":1,"message":"281","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"282","line":20,"column":11,"nodeType":"277","messageId":"278","endLine":20,"endColumn":17},{"ruleId":"275","severity":1,"message":"283","line":1,"column":38,"nodeType":"277","messageId":"278","endLine":1,"endColumn":48},{"ruleId":"275","severity":1,"message":"284","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":23},{"ruleId":"285","severity":1,"message":"286","line":56,"column":6,"nodeType":"287","endLine":56,"endColumn":8,"suggestions":"288"},{"ruleId":"275","severity":1,"message":"289","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"285","severity":1,"message":"290","line":25,"column":6,"nodeType":"287","endLine":25,"endColumn":19,"suggestions":"291"},{"ruleId":"292","severity":1,"message":"293","line":47,"column":7,"nodeType":"294","messageId":"295","endLine":47,"endColumn":39},{"ruleId":"275","severity":1,"message":"296","line":7,"column":8,"nodeType":"277","messageId":"278","endLine":7,"endColumn":26},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"298","line":2,"column":17,"nodeType":"277","messageId":"278","endLine":2,"endColumn":23},{"ruleId":"275","severity":1,"message":"297","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":15},{"ruleId":"275","severity":1,"message":"299","line":6,"column":10,"nodeType":"277","messageId":"278","endLine":6,"endColumn":23},{"ruleId":"275","severity":1,"message":"300","line":6,"column":25,"nodeType":"277","messageId":"278","endLine":6,"endColumn":41},{"ruleId":"275","severity":1,"message":"297","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":15},{"ruleId":"275","severity":1,"message":"298","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":23},{"ruleId":"275","severity":1,"message":"297","line":13,"column":10,"nodeType":"277","messageId":"278","endLine":13,"endColumn":15},{"ruleId":"275","severity":1,"message":"298","line":13,"column":17,"nodeType":"277","messageId":"278","endLine":13,"endColumn":23},{"ruleId":"275","severity":1,"message":"301","line":14,"column":8,"nodeType":"277","messageId":"278","endLine":14,"endColumn":22},{"ruleId":"275","severity":1,"message":"302","line":3,"column":9,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"303","line":1,"column":31,"nodeType":"277","messageId":"278","endLine":1,"endColumn":42},{"ruleId":"275","severity":1,"message":"289","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":19},{"ruleId":"275","severity":1,"message":"281","line":1,"column":21,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"289","line":1,"column":20,"nodeType":"277","messageId":"278","endLine":1,"endColumn":29},{"ruleId":"275","severity":1,"message":"304","line":6,"column":23,"nodeType":"277","messageId":"278","endLine":6,"endColumn":37},{"ruleId":"275","severity":1,"message":"305","line":110,"column":9,"nodeType":"277","messageId":"278","endLine":110,"endColumn":22},{"ruleId":"275","severity":1,"message":"298","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":16},{"ruleId":"275","severity":1,"message":"281","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"279","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":18},{"ruleId":"275","severity":1,"message":"306","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":22},{"ruleId":"275","severity":1,"message":"307","line":8,"column":22,"nodeType":"277","messageId":"278","endLine":8,"endColumn":35},{"ruleId":"275","severity":1,"message":"308","line":12,"column":21,"nodeType":"277","messageId":"278","endLine":12,"endColumn":37},{"ruleId":"275","severity":1,"message":"309","line":9,"column":19,"nodeType":"277","messageId":"278","endLine":9,"endColumn":29},{"ruleId":"275","severity":1,"message":"298","line":1,"column":10,"nodeType":"277","messageId":"278","endLine":1,"endColumn":16},{"ruleId":"275","severity":1,"message":"310","line":1,"column":18,"nodeType":"277","messageId":"278","endLine":1,"endColumn":23},{"ruleId":"275","severity":1,"message":"301","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":22},{"ruleId":"275","severity":1,"message":"311","line":11,"column":21,"nodeType":"277","messageId":"278","endLine":11,"endColumn":33},{"ruleId":"275","severity":1,"message":"312","line":22,"column":18,"nodeType":"277","messageId":"278","endLine":22,"endColumn":27},{"ruleId":"275","severity":1,"message":"313","line":112,"column":9,"nodeType":"277","messageId":"278","endLine":112,"endColumn":19},{"ruleId":"285","severity":1,"message":"314","line":16,"column":6,"nodeType":"287","endLine":16,"endColumn":8,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":61,"column":9,"nodeType":"318","messageId":"319","endLine":61,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":64,"column":9,"nodeType":"318","messageId":"319","endLine":64,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":67,"column":9,"nodeType":"318","messageId":"319","endLine":67,"endColumn":15},{"ruleId":"316","severity":1,"message":"317","line":70,"column":9,"nodeType":"318","messageId":"319","endLine":70,"endColumn":15},{"ruleId":"275","severity":1,"message":"320","line":42,"column":17,"nodeType":"277","messageId":"278","endLine":42,"endColumn":25},{"ruleId":"285","severity":1,"message":"321","line":13,"column":6,"nodeType":"287","endLine":13,"endColumn":13,"suggestions":"322"},{"ruleId":"275","severity":1,"message":"323","line":5,"column":10,"nodeType":"277","messageId":"278","endLine":5,"endColumn":22},{"ruleId":"275","severity":1,"message":"324","line":5,"column":24,"nodeType":"277","messageId":"278","endLine":5,"endColumn":39},{"ruleId":"275","severity":1,"message":"289","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"325","line":5,"column":28,"nodeType":"277","messageId":"278","endLine":5,"endColumn":47},{"ruleId":"275","severity":1,"message":"326","line":3,"column":7,"nodeType":"277","messageId":"278","endLine":3,"endColumn":28},{"ruleId":"273","replacedBy":"327"},"no-new-object",["328"],"no-unused-vars","'StaticStatsBox' is defined but never used.","Identifier","unusedVar","'AbilityBox' is defined but never used.","'ManualDiceRoller' is defined but never used.","'useState' is defined but never used.","'modPos' is assigned a value but never used.","'useContext' is defined but never used.","'ModPosContext' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAbilities'. Either include it or remove the dependency array.","ArrayExpression",["329"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'keeprolls' and 'rollresultslist'. Either include them or remove the dependency array.",["330"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'RollResultsSection' is defined but never used.","'Stack' is defined but never used.","'Button' is defined but never used.","'oldbuttonvals' is assigned a value but never used.","'setOldButtonVals' is assigned a value but never used.","'DiceRollButton' is defined but never used.","'MapCanvas' is assigned a value but never used.","'useCallback' is defined but never used.","'setLogMessages' is assigned a value but never used.","'getEncounters' is assigned a value but never used.","'AbilitySection' is defined but never used.","'settempvalues' is assigned a value but never used.","'setAbilityScores' is assigned a value but never used.","'setActions' is assigned a value but never used.","'Table' is defined but never used.","'setSpellInfo' is assigned a value but never used.","'setSpells' is assigned a value but never used.","'handleCast' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createSpellSlots'. Either include it or remove the dependency array.",["331"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calculateWeight'. Either include it or remove the dependency array.",["332"],"'sectionorder' is assigned a value but never used.","'setSectionOrder' is assigned a value but never used.","'setFeaturesSections' is assigned a value but never used.","'SetRollResultsContext' is assigned a value but never used.",["328"],"no-object-constructor",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},"Update the dependencies array to be: [getAbilities]",{"range":"341","text":"342"},"Update the dependencies array to be: [keeprolls, rollresults, rollresultslist]",{"range":"343","text":"344"},"Update the dependencies array to be: [createSpellSlots]",{"range":"345","text":"346"},"Update the dependencies array to be: [calculateWeight, items]",{"range":"347","text":"348"},[1295,1297],"[getAbilities]",[717,730],"[keeprolls, rollresults, rollresultslist]",[505,507],"[createSpellSlots]",[432,439],"[calculateWeight, items]"]