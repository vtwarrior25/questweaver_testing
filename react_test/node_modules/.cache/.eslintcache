[{"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\index.js":"1","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\App.js":"2","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\reportWebVitals.js":"3","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DiceRollButton.js":"4","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillSection.js":"5","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillRow.js":"6","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilitySection.js":"7","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilityBox.js":"8","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SingleRollResult.js":"9","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\RollResultsSection.js":"10","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\HealthSection.js":"11","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterSheet.js":"12","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\StaticStatsBox.js":"13","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRoller.js":"14","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterInventoryArea.js":"15","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrowSection.js":"16","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrow.js":"17","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DefensesConditionsBox.js":"18","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MapSection.js":"19","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Map.js":"20","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderBox.js":"21","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderItem.js":"22","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chatbox.js":"23","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chat.js":"24","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ChatMessage.js":"25","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLog.js":"26","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLogMessage.js":"27","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterSheet.js":"28","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroup.js":"29","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroupForm.js":"30","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterCreator.js":"31","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ActionsMenu.js":"32","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRollButton.js":"33","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsMenu.js":"34","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsLevelSection.js":"35","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventoryMenu.js":"36","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventorySection.js":"37","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\NotesMenu.js":"38","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\FeaturesMenu.js":"39"},{"size":536,"mtime":1699034410573,"results":"40","hashOfConfig":"41"},{"size":4260,"mtime":1706931379919,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1699032879980,"results":"43","hashOfConfig":"41"},{"size":1997,"mtime":1706912824803,"results":"44","hashOfConfig":"41"},{"size":1001,"mtime":1706681453156,"results":"45","hashOfConfig":"41"},{"size":558,"mtime":1706676869133,"results":"46","hashOfConfig":"41"},{"size":1625,"mtime":1706891426949,"results":"47","hashOfConfig":"41"},{"size":510,"mtime":1706676828894,"results":"48","hashOfConfig":"41"},{"size":1074,"mtime":1706932468924,"results":"49","hashOfConfig":"41"},{"size":2093,"mtime":1706932059663,"results":"50","hashOfConfig":"41"},{"size":3258,"mtime":1706541725975,"results":"51","hashOfConfig":"41"},{"size":2199,"mtime":1706930415075,"results":"52","hashOfConfig":"41"},{"size":1915,"mtime":1706932566192,"results":"53","hashOfConfig":"41"},{"size":3759,"mtime":1706914492171,"results":"54","hashOfConfig":"41"},{"size":1074,"mtime":1706908812486,"results":"55","hashOfConfig":"41"},{"size":2755,"mtime":1706336087014,"results":"56","hashOfConfig":"41"},{"size":417,"mtime":1706676859428,"results":"57","hashOfConfig":"41"},{"size":985,"mtime":1706476159728,"results":"58","hashOfConfig":"41"},{"size":536,"mtime":1706851066676,"results":"59","hashOfConfig":"41"},{"size":156,"mtime":1706506468897,"results":"60","hashOfConfig":"41"},{"size":2410,"mtime":1706853113793,"results":"61","hashOfConfig":"41"},{"size":475,"mtime":1706853327222,"results":"62","hashOfConfig":"41"},{"size":531,"mtime":1706541685434,"results":"63","hashOfConfig":"41"},{"size":1917,"mtime":1706741714592,"results":"64","hashOfConfig":"41"},{"size":256,"mtime":1706506142499,"results":"65","hashOfConfig":"41"},{"size":1157,"mtime":1706505418986,"results":"66","hashOfConfig":"41"},{"size":313,"mtime":1706504862643,"results":"67","hashOfConfig":"41"},{"size":3403,"mtime":1706943951323,"results":"68","hashOfConfig":"41"},{"size":6698,"mtime":1706932356505,"results":"69","hashOfConfig":"41"},{"size":12818,"mtime":1706745973094,"results":"70","hashOfConfig":"41"},{"size":6349,"mtime":1706819296899,"results":"71","hashOfConfig":"41"},{"size":2514,"mtime":1706745866395,"results":"72","hashOfConfig":"41"},{"size":1066,"mtime":1706911504957,"results":"73","hashOfConfig":"41"},{"size":3044,"mtime":1706901135054,"results":"74","hashOfConfig":"41"},{"size":4163,"mtime":1706907966728,"results":"75","hashOfConfig":"41"},{"size":3417,"mtime":1706890687535,"results":"76","hashOfConfig":"41"},{"size":2869,"mtime":1706900152110,"results":"77","hashOfConfig":"41"},{"size":1786,"mtime":1706902134390,"results":"78","hashOfConfig":"41"},{"size":2092,"mtime":1706911539226,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1dx4dds",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"83"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\index.js",[],[],["208"],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\App.js",["209","210","211"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\reportWebVitals.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DiceRollButton.js",["212"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillSection.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SkillRow.js",["213"],[],"import React, { Component } from \"react\";\r\nimport DiceRollButton from \"./DiceRollButton\";\r\n\r\nfunction SkillRow ({name, mod, prof, bonus, setRollResults}) {\r\n\r\n  return (\r\n  <tr>\r\n    <td><input type=\"checkbox\" readOnly={true} checked={prof}></input></td>\r\n    <td className=\"skillMod\">{mod}</td>\r\n    <td className=\"skillName\">{name}</td>\r\n    <td className=\"skillBonus\">\r\n      <DiceRollButton name={name} rolltype=\"Skill\" die=\"20\" num=\"1\" mod={bonus} text={bonus} setRollResults={setRollResults}/>\r\n    </td>\r\n  </tr>\r\n  );\r\n\r\n}\r\n\r\nexport default SkillRow;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilitySection.js",["214"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\AbilityBox.js",["215"],[],"import React, { Component } from \"react\";\r\nimport DiceRollButton from \"./DiceRollButton\";\r\n\r\nfunction AbilityBox ({name, abbrev, bonus, score, setRollResults}) {\r\n  return (\r\n    <div className=\"abilityBox\">\r\n      <div className=\"abilityLabel\">{abbrev}</div>\r\n      <DiceRollButton name={name} rolltype=\"Ability\" die=\"20\" num=\"1\" mod={bonus} text={bonus} setRollResults={setRollResults}/>\r\n      <div className=\"oval\">\r\n        <h4>{score}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AbilityBox;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SingleRollResult.js",["216"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\RollResultsSection.js",["217"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\HealthSection.js",["218"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Stack, Button } from 'react-bootstrap';\r\n\r\nfunction HealthSection () {\r\n  const [healthval, setHealthVal] = useState({\r\n    currenthealth: 11,\r\n    maxhealth: 22\r\n  })\r\n\r\n  const [healthmod, setHealthMod] = useState(0);\r\n\r\n  useEffect(() => {  \r\n      getHealth();\r\n    }, []\r\n  ); \r\n\r\n  useEffect(() => {\r\n      setHealth();\r\n    }, [healthval.currenthealth]\r\n  );\r\n\r\n  useEffect(() => {\r\n    console.log(`healthmod ${healthmod}`); \r\n    }, [healthmod]\r\n  );\r\n\r\n  const handleChange = (e) => {\r\n    console.log(`healthmod ${healthmod}`);\r\n    setHealthMod(e.target.value);\r\n    console.log(`healthmod ${healthmod}`);\r\n  }\r\n\r\n  const updateHealth = (option) => {\r\n    /*let newhealthobj = {\r\n      currenthealth: healthval.currenthealth,\r\n      maxhealth: healthval.maxhealth\r\n    }*/\r\n    let currenthealth = Number(healthval.currenthealth);\r\n    let newhealth = 0;\r\n    if (option === 'heal') {\r\n      newhealth = Number(currenthealth) + Number(healthmod);\r\n      console.log(`${newhealth} = ${currenthealth} + ${healthmod}`)\r\n    } else if (option === 'damage') {\r\n      console.log(`${newhealth} = ${currenthealth} - ${healthmod}`)\r\n      newhealth = Number(currenthealth) - Number(healthmod);\r\n    } else {\r\n      throw \"Shit's fucked brothers!\";\r\n    }\r\n    //newhealthobj.currenthealth = newhealth;\r\n    setHealthVal({...healthval, currenthealth: newhealth});\r\n    console.log(\"Current Health: \" + currenthealth + \"  HealthMod: \" + healthmod + \" NewHealth: \" + newhealth);\r\n    //addLogEntry(`Health: ${currenthealth} -> ${newhealth}`);\r\n    //document.getElementById(\"currentHealth\").value = newhealth;\r\n  }\r\n\r\n  const getHealth = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=health`)\r\n    .then(res => res.json())\r\n    .then(res => setHealthVal(res));\r\n  }\r\n\r\n  const setHealth = () => {\r\n    console.log('sethealth');\r\n    //fetch(`http://localhost:9000/sendcharacterinfo?infotype=health&currenthealth=${healthval.currenthealth}`);\r\n  }\r\n\r\n  return ( \r\n    <div className=\"healthSection frontElement\">\r\n      <Stack className=\"leftHealthSection\" direction=\"vertical\" gap={2}>\r\n        <Button variant='secondary' size='sm' onClick={() => updateHealth('heal')} >Heal</Button>\r\n        <input type='number' size=\"4\" onChange={(e) => handleChange(e)}></input>\r\n        <Button variant='secondary' size='sm' onClick={() => updateHealth('damage')} >Damage</Button>\r\n      </Stack>\r\n      <div className=\"rightHealthSection\">\r\n        <span className='characterSheetSectionTitle'>Hit Points</span>\r\n        <Stack direction=\"horizontal\" gap={1}>\r\n          <div className=\"healthBox\">\r\n            <label htmlFor=\"currenthealth\">Current</label>\r\n            <input name=\"currenthealth\" type=\"number\" size=\"4\" value={healthval.currenthealth} onChange={(e) => setHealthVal({...healthval, currenthealth: e.target.value})}></input>\r\n          </div>\r\n          <div className=\"healthBox\">\r\n            <label htmlFor=\"maxhealth\">Max</label>\r\n            <input name=\"maxhealth\" type=\"number\" size=\"4\" readOnly={true} value={healthval.maxhealth}></input>\r\n          </div>\r\n        </Stack>\r\n      </div>\r\n      \r\n    </div>\r\n      \r\n  );\r\n}\r\n\r\nexport default HealthSection;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterSheet.js",["219"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\StaticStatsBox.js",["220","221"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRoller.js",["222","223","224"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterInventoryArea.js",["225","226"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrowSection.js",["227","228","229"],[],"/*\r\n  return ( \r\n    <div className=\"characterSavingThrowSection frontElement\">\r\n      <Stack className=\"characterSavingThrowLeft\" direction=\"vertical\" gap={1}>\r\n        <div className=\"characterSavingThrow\"></div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Stack, Button } from 'react-bootstrap';\r\nimport DiceRollButton from './DiceRollButton'\r\nimport SavingThrow from './SavingThrow';\r\n\r\nfunction SavingThrowSection ({setRollResults}) { \r\n  const [savingthrows, setSavingThrows] = useState([\r\n    {\r\n      name: 'STR',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'DEX',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'CON',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'INT',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'WIS',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    {\r\n      name: 'CHA',\r\n      prof: false,\r\n      val: +5,\r\n    },\r\n    ]);\r\n\r\n  useEffect(() => {  \r\n      getStats();\r\n    }, []\r\n  )\r\n\r\n\r\n  const getStats = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=savingthrow`)\r\n    .then(res => res.json())\r\n    .then(res => setSavingThrows(res));\r\n  }\r\n\r\n  return (\r\n    /* \r\n    <div className=\"staticStatsBox frontElement\">\r\n      <Stack className=\"statsContainer senses\" gap={1}>\r\n        <div>Perception - {staticstats.perception}</div>\r\n        <div>Investigation - {staticstats.investigation}</div>\r\n        <div>Insight - {staticstats.insight}</div>\r\n      </Stack>\r\n      <Stack className=\"statsContainer generalStats\" gap={1}>\r\n        <div>Proficiency Bonus - {staticstats.profbonus}</div>\r\n        <div>Speed - {staticstats.speed}</div>\r\n        <div>Initiative - <DiceRollButton name=\"Initiative\" rolltype=\"Stat\" die=\"20\" num=\"1\" mod={staticstats.initiative} setRollResults={setRollResults}>{staticstats.initiative}</DiceRollButton></div>\r\n        <div>Armor Class - {staticstats.armorclass}</div>\r\n      </Stack>\r\n      <Stack className=\"statsContainer proficiencies\">\r\n        <div>Armor - {staticstats.armor}</div>\r\n        <div>Weapons - {staticstats.weapons}</div>\r\n        <div>Tools - {staticstats.tools}</div>\r\n        <div>Languages - {staticstats.languages}</div>\r\n      </Stack>\r\n    </div>\r\n    */\r\n    <div className=\"characterSavingThrowSectionBox frontElement\">\r\n      <span className='characterSheetSectionTitle'>Saving Throws</span>\r\n      <div className=\"characterSavingThrowSection\">\r\n        {savingthrows.map((savingthrow) => <SavingThrow key={savingthrow.name} name={savingthrow.name} prof={savingthrow.prof} val={savingthrow.val} setRollResults={setRollResults}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavingThrowSection;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SavingThrow.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\DefensesConditionsBox.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MapSection.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Map.js",["230"],[],"function Map() {\r\n\r\n  const MapCanvas = props => <canvas {...props}/>\r\n\r\n  return ( \r\n    <div>\r\n      MapCanvas\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderBox.js",["231"],[],"import { useState, useEffect, useCallback} from \"react\";\r\nimport TurnOrderItem from \"./TurnOrderItem\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nfunction TurnOrder() {\r\n  const [turnorder, setTurnOrder] = useState([\r\n    /*\r\n    {\r\n      id: 0,\r\n      name: \"Jerome\",\r\n      initiative: 17,\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Dylan\",\r\n      initiative: 15,\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Greg\",\r\n      initiative: 15,\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Rebecca\",\r\n      initiative: 14,\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Jauffre\",\r\n      initiative: 12,\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Erica\",\r\n      initiative: 11,\r\n    },\r\n    */\r\n  ]);\r\n\r\n  const [currentturn, setCurrentTurn] = useState(0);\r\n\r\n  const changeTurn = (mode) => {\r\n    let turnorderlength = turnorder.length;\r\n    let newturn = currentturn;\r\n    if (mode === \"next\") {\r\n      newturn = (newturn + 1) % turnorderlength;\r\n    } else if (mode === \"prev\") {\r\n      newturn = (newturn - 1 + turnorderlength) % turnorderlength;\r\n    }\r\n    setCurrentTurn(newturn);\r\n    console.log(newturn);\r\n  }\r\n\r\n  useEffect(() => {  \r\n    getTurnOrder();\r\n    }, []\r\n  )\r\n\r\n\r\n  const getTurnOrder = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=turnorder`)\r\n    .then(res => res.json())\r\n    .then(res => setTurnOrder([...res].sort((a,b) => {console.log(`sortmode a=${a.initiative} b=${b.initiative}`);return b.initiative - a.initiative})));\r\n  }\r\n\r\n  const removeTurnOrderItem = (nametoremove, initiative) => {\r\n    setTurnOrder(turnorder.filter((turn) => turn.name !== nametoremove || turn.initiative !== initiative))\r\n  }\r\n  \r\n\r\n  return ( \r\n    <div className=\"turnOrderBox frontElement\">\r\n      <div className=\"turnOrderList\">\r\n        {turnorder && turnorder.map((turn, index) => <TurnOrderItem key={index} name={turn.name} initiative={turn.initiative} currentturn={index === currentturn?true:false} removeItem={removeTurnOrderItem}/>)}\r\n      </div>\r\n      <div className=\"turnOrderButtons\">\r\n        <div className=\"turnOrderControlButtons\">\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={() => changeTurn(\"prev\")}>Prev</Button>\r\n          <Button variant=\"secondary\" size=\"sm\" onClick={() => changeTurn(\"next\")}>Next</Button>\r\n        </div>\r\n        <Button variant=\"secondary\" size=\"sm\">Clear</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TurnOrder;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\TurnOrderItem.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chatbox.js",["232","233"],[],"import { useEffect, useState } from 'react';\r\nimport { Tabs, Tab } from \"react-bootstrap\";\r\nimport Chat from './Chat';\r\nimport GameLog from './GameLog';\r\n\r\nfunction Chatbox() {\r\n\r\n  return ( \r\n    <div className=\"chatBox frontElement\">\r\n      <Tabs defaultActiveKey=\"chat\" className=\"chatTabs\">\r\n        <Tab eventKey=\"chat\" title=\"Chat\">\r\n          <Chat></Chat>\r\n        </Tab>\r\n        <Tab eventKey=\"log\" title=\"Log\">\r\n          <GameLog></GameLog>\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chatbox;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\Chat.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ChatMessage.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLog.js",["234","235"],[],"import { useState, useEffect } from 'react';\r\nimport GameLogMessage from './GameLogMessage';\r\n\r\nfunction GameLog() {\r\n\r\n  const [logmessages, setLogMessages] = useState([\r\n    {\r\n      id: 0,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 1,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 2,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n    {\r\n      id: 3,\r\n      character: \"Jerome\",\r\n      type: \"Attack Roll\",\r\n      text: \"This is an attack roll\",\r\n    },\r\n  ]);\r\n\r\n  /*\r\n  useEffect(() => {  \r\n    getLog();\r\n    }, []\r\n  );\r\n\r\n\r\n  const getLog = () => {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=log`)\r\n    .then(res => res.json())\r\n    .then(res => setLogMessages(res));\r\n  }\r\n  */\r\n  return ( \r\n    <div className=\"gameLogInnerBox\">\r\n      {logmessages.map((message) => <GameLogMessage key={message.id} character={message.character} type={message.type} text={message.text}/>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameLog;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\GameLogMessage.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterSheet.js",["236","237"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroup.js",["238","239"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\MonsterGroupForm.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\CharacterCreator.js",["240","241","242","243"],[],"import { useState, useEffect } from 'react';\r\nimport { Nav, Tab, Tabs, Table, Button } from 'react-bootstrap';\r\nimport AbilityBox from './AbilityBox';\r\nimport AbilitySection from './AbilitySection';\r\n\r\nfunction CharacterCreator() {\r\n  \r\n  const [tempvalues, settempvalues] = useState([0,0,0,0,0,0]); \r\n\r\n  const [selectabilities, setSelectAbilities] = useState([\"-\", \"STR\", \"DEX\", \"CON\", \"INT\", \"WIS\", \"CHA\"]);\r\n\r\n  const [abilities, setAbilityScores] = useState([\r\n    {\r\n      abilityname: \"Strength\",\r\n      abilityabbrev: \"STR\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Dexterity\",\r\n      abilityabbrev: \"DEX\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Constitution\",\r\n      abilityabbrev: \"CON\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Intelligence\",\r\n      abilityabbrev: \"INT\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Wisdom\",\r\n      abilityabbrev: \"WIS\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n    {\r\n      abilityname: \"Charisma\",\r\n      abilityabbrev: \"CHA\",\r\n      abilityscore: 0,\r\n      abilitybonus: 0,\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setAbilities();\r\n    }, [abilities]\r\n  );\r\n\r\n\r\n  const setAbilities = () => {\r\n    console.log(\"Setting ability scores on server\");\r\n  }\r\n\r\n  // This function should hide the option currently selected by each dropdown from the list of options of the other dropdowns, and should show the options again when they aren't selected anywhere\r\n  const updateSelections = (e) => {\r\n    let a = e.target.value;\r\n    setSelectAbilities(selectabilities.filter(item => item !== a || item === '-'));\r\n    \r\n    console.log(a);\r\n  }\r\n\r\n\r\n  const setAbilityValues = () => {\r\n    \r\n  }\r\n\r\n  return (  \r\n    <div className=\"characterCreator\">\r\n      <Tabs className='characterCreatorTabs frontElement' defaultActiveKey=\"race\">\r\n        <Tab eventKey=\"race\" title=\"Race\">\r\n          <div className='characterCreatorSection characterCreatorRace frontElement'>\r\n            <Tab.Container defaultActiveKey=\"dragonborn\">\r\n              <Nav variant=\"pills\" className=\"flex-column\">\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"dragonborn\">Dragonborn</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"dwarf\">Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"hilldwarf\">Hill Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"mountaindwarf\">Mountain Dwarf</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey=\"highelf\">High Elf</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n              <Tab.Content>\r\n                <Tab.Pane className=\"characterCreatorTabContent\" eventKey=\"dragonborn\">\r\n                  <div className=\"characterCreatorTabContent\">\r\n                    <Table size='sm'>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Dragon</th>\r\n                          <th>Damage Type</th>\r\n                          <th>Breath Weapon</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>Black</td>\r\n                          <td>Acid</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Blue</td>\r\n                          <td>Lightning</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Brass</td>\r\n                          <td>Fire</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td>Bronze</td>\r\n                          <td>Lightning</td>\r\n                          <td>5 by 30 ft. line (Dex save)</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </Table>\r\n                  </div>\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"dwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"hilldwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"mountaindwarf\">\r\n\r\n                </Tab.Pane>\r\n                <Tab.Pane eventKey=\"high elf\">\r\n\r\n                </Tab.Pane>\r\n              </Tab.Content>\r\n            </Tab.Container>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"class\" title=\"Class\">\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"abilities\" title=\"Abilities\">\r\n          <div className='characterCreatorSection characterCreatorAbilities frontElement'>\r\n            <div className=\"abilityContainer abilityContainerDisplay frontElement\">\r\n              {abilities.map((ability, index) => \r\n                <div className=\"abilityBox\" key={index}>\r\n                  <div className=\"abilityLabel\">{ability.abilityabbrev}</div>\r\n                  <div className=\"abilityModDisplay\">{ability.abilityscore}</div>\r\n                  <div className=\"oval\">\r\n                    <h4>{ability.abilitybonus}</h4>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"abilityContainer abilityContainerRoll frontElement\">\r\n              {tempvalues.map((temp, index) => \r\n                <div className=\"abilityBox\" key={index}>\r\n                  <Button>{temp}</Button>\r\n                  <select onChange={(e) => {updateSelections(e)}}>\r\n                    {selectabilities.map((ability, index) => <option key={index} value={ability}>{ability}</option>)}\r\n                  </select>\r\n                </div>\r\n              )}\r\n              <Button onClick={() => {setAbilityValues()}}>Set</Button>\r\n            </div>\r\n          </div>\r\n        </Tab>\r\n        <Tab eventKey=\"equipment\" title=\"Equipment\">\r\n\r\n        </Tab>\r\n        <Tab eventKey=\"description\" title=\"Description\">\r\n\r\n        </Tab>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterCreator;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ActionsMenu.js",["244"],[],"import { Table } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DiceRollButton from \"./DiceRollButton\";\r\n\r\n\r\nfunction ActionsMenu({setRollResults}) {\r\n\r\n  \r\n  const [actions, setActions] = useState([\r\n    {\r\n      name: \"Mace\",\r\n      range: \"5 ft\",\r\n      hitdc: 5,\r\n      effectdie: 12,\r\n      effectdienum: 1,\r\n      effectbonus: 3,\r\n      notes: \"Simple\",\r\n    },\r\n    {\r\n      name: \"Dagger\",\r\n      range: \"20 (60)\",\r\n      hitdc: 6,\r\n      effectdie: 4,\r\n      effectdienum: 1,\r\n      effectbonus: 3,\r\n      notes: \"Simple, Light, Thrown\",\r\n    },\r\n    {\r\n      name: \"Unarmed Strike\",\r\n      range: \"5 ft\",\r\n      hitdc: 5,\r\n      effectdie: 0,\r\n      effectdienum: 0,\r\n      effectbonus: 4,\r\n      notes: \"\",\r\n    },\r\n  ]);\r\n\r\n\r\n  useEffect(() => {\r\n    getActions();\r\n  }, []\r\n  );\r\n\r\n  // Gets actions from the server\r\n  const getActions = () => {\r\n    console.log(\"Getting actions!\");\r\n  }\r\n\r\n  const modPos = (bonus) => {\r\n    if (bonus > 0) {\r\n      return `+ ${bonus}`;\r\n    } else if (bonus < 0) {\r\n      return `- ${bonus}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n\r\n  return ( \r\n    <div className=\"actionsMenu characterInventoryAreaSection\">\r\n      <div className=\"actionsSection\">\r\n        <span className=\"characterSheetSectionTitle\">Actions</span>\r\n        <Table size=\"sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Range</th>\r\n              <th>Hit/DC</th>\r\n              <th>Effect</th>\r\n              <th>Notes</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {actions.map((action, index) => \r\n              <tr key={index}>\r\n                <td>{action.name}</td>\r\n                <td>{action.range}</td>\r\n                <td><DiceRollButton name={action.name} rolltype={\"Attack\"} die={20} num={1} mod={action.hitdc} setRollResults={setRollResults} text={action.hitdc}></DiceRollButton></td>\r\n                <td><DiceRollButton name={action.name} rolltype={\"Damage\"} die={action.effectdie} num={action.effectdienum} mod={action.effectbonus} setRollResults={setRollResults} text={`${action.effectdienum}d${action.effectdie} ${modPos(action.effectbonus)} `}></DiceRollButton></td>\r\n                <td>{action.notes}</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n      <div className=\"bonusActionsSection\">\r\n        <span className=\"characterSheet\">Actions</span>\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActionsMenu;","C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\ManualDiceRollButton.js",[],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsMenu.js",["245","246","247","248","249","250"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\SpellsLevelSection.js",["251","252","253","254","255"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventoryMenu.js",["256"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\InventorySection.js",["257"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\NotesMenu.js",["258","259"],[],"C:\\Users\\cosmi\\.projects\\questweaver_testing\\react_test\\src\\FeaturesMenu.js",["260","261"],[],{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":6,"column":8,"nodeType":"266","messageId":"267","endLine":6,"endColumn":22},{"ruleId":"264","severity":1,"message":"268","line":13,"column":8,"nodeType":"266","messageId":"267","endLine":13,"endColumn":18},{"ruleId":"264","severity":1,"message":"269","line":14,"column":8,"nodeType":"266","messageId":"267","endLine":14,"endColumn":24},{"ruleId":"264","severity":1,"message":"270","line":38,"column":9,"nodeType":"266","messageId":"267","endLine":38,"endColumn":19},{"ruleId":"264","severity":1,"message":"271","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"273","line":55,"column":6,"nodeType":"274","endLine":55,"endColumn":8,"suggestions":"275"},{"ruleId":"264","severity":1,"message":"271","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"272","severity":1,"message":"277","line":25,"column":6,"nodeType":"274","endLine":25,"endColumn":19,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":47,"column":7,"nodeType":"281","messageId":"282","endLine":47,"endColumn":39},{"ruleId":"264","severity":1,"message":"283","line":7,"column":8,"nodeType":"266","messageId":"267","endLine":7,"endColumn":26},{"ruleId":"264","severity":1,"message":"284","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"285","line":2,"column":17,"nodeType":"266","messageId":"267","endLine":2,"endColumn":23},{"ruleId":"264","severity":1,"message":"284","line":2,"column":10,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"286","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":23},{"ruleId":"264","severity":1,"message":"287","line":6,"column":25,"nodeType":"266","messageId":"267","endLine":6,"endColumn":41},{"ruleId":"264","severity":1,"message":"284","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":15},{"ruleId":"264","severity":1,"message":"285","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":23},{"ruleId":"264","severity":1,"message":"284","line":13,"column":10,"nodeType":"266","messageId":"267","endLine":13,"endColumn":15},{"ruleId":"264","severity":1,"message":"285","line":13,"column":17,"nodeType":"266","messageId":"267","endLine":13,"endColumn":23},{"ruleId":"264","severity":1,"message":"288","line":14,"column":8,"nodeType":"266","messageId":"267","endLine":14,"endColumn":22},{"ruleId":"264","severity":1,"message":"289","line":3,"column":9,"nodeType":"266","messageId":"267","endLine":3,"endColumn":18},{"ruleId":"264","severity":1,"message":"290","line":1,"column":31,"nodeType":"266","messageId":"267","endLine":1,"endColumn":42},{"ruleId":"264","severity":1,"message":"276","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":19},{"ruleId":"264","severity":1,"message":"291","line":1,"column":21,"nodeType":"266","messageId":"267","endLine":1,"endColumn":29},{"ruleId":"264","severity":1,"message":"276","line":1,"column":20,"nodeType":"266","messageId":"267","endLine":1,"endColumn":29},{"ruleId":"264","severity":1,"message":"292","line":6,"column":23,"nodeType":"266","messageId":"267","endLine":6,"endColumn":37},{"ruleId":"264","severity":1,"message":"293","line":31,"column":22,"nodeType":"266","messageId":"267","endLine":31,"endColumn":35},{"ruleId":"272","severity":1,"message":"294","line":66,"column":6,"nodeType":"274","endLine":66,"endColumn":8,"suggestions":"295"},{"ruleId":"264","severity":1,"message":"285","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":16},{"ruleId":"264","severity":1,"message":"288","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":22},{"ruleId":"264","severity":1,"message":"268","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":18},{"ruleId":"264","severity":1,"message":"296","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":22},{"ruleId":"264","severity":1,"message":"297","line":8,"column":22,"nodeType":"266","messageId":"267","endLine":8,"endColumn":35},{"ruleId":"264","severity":1,"message":"298","line":12,"column":21,"nodeType":"266","messageId":"267","endLine":12,"endColumn":37},{"ruleId":"264","severity":1,"message":"299","line":9,"column":19,"nodeType":"266","messageId":"267","endLine":9,"endColumn":29},{"ruleId":"264","severity":1,"message":"285","line":1,"column":10,"nodeType":"266","messageId":"267","endLine":1,"endColumn":16},{"ruleId":"264","severity":1,"message":"300","line":1,"column":18,"nodeType":"266","messageId":"267","endLine":1,"endColumn":23},{"ruleId":"264","severity":1,"message":"288","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":22},{"ruleId":"264","severity":1,"message":"301","line":11,"column":21,"nodeType":"266","messageId":"267","endLine":11,"endColumn":33},{"ruleId":"264","severity":1,"message":"302","line":22,"column":18,"nodeType":"266","messageId":"267","endLine":22,"endColumn":27},{"ruleId":"264","severity":1,"message":"303","line":112,"column":9,"nodeType":"266","messageId":"267","endLine":112,"endColumn":19},{"ruleId":"272","severity":1,"message":"304","line":16,"column":6,"nodeType":"274","endLine":16,"endColumn":8,"suggestions":"305"},{"ruleId":"306","severity":1,"message":"307","line":61,"column":9,"nodeType":"308","messageId":"309","endLine":61,"endColumn":15},{"ruleId":"306","severity":1,"message":"307","line":64,"column":9,"nodeType":"308","messageId":"309","endLine":64,"endColumn":15},{"ruleId":"306","severity":1,"message":"307","line":67,"column":9,"nodeType":"308","messageId":"309","endLine":67,"endColumn":15},{"ruleId":"306","severity":1,"message":"307","line":70,"column":9,"nodeType":"308","messageId":"309","endLine":70,"endColumn":15},{"ruleId":"264","severity":1,"message":"310","line":42,"column":17,"nodeType":"266","messageId":"267","endLine":42,"endColumn":25},{"ruleId":"272","severity":1,"message":"311","line":13,"column":6,"nodeType":"274","endLine":13,"endColumn":13,"suggestions":"312"},{"ruleId":"264","severity":1,"message":"313","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":22},{"ruleId":"264","severity":1,"message":"314","line":5,"column":24,"nodeType":"266","messageId":"267","endLine":5,"endColumn":39},{"ruleId":"264","severity":1,"message":"276","line":1,"column":17,"nodeType":"266","messageId":"267","endLine":1,"endColumn":26},{"ruleId":"264","severity":1,"message":"315","line":5,"column":28,"nodeType":"266","messageId":"267","endLine":5,"endColumn":47},"no-new-object",["316"],"no-unused-vars","'StaticStatsBox' is defined but never used.","Identifier","unusedVar","'AbilityBox' is defined but never used.","'ManualDiceRoller' is defined but never used.","'handleText' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAbilities'. Either include it or remove the dependency array.","ArrayExpression",["317"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'keeprolls' and 'rollresultslist'. Either include them or remove the dependency array.",["318"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'RollResultsSection' is defined but never used.","'Stack' is defined but never used.","'Button' is defined but never used.","'oldbuttonvals' is assigned a value but never used.","'setOldButtonVals' is assigned a value but never used.","'DiceRollButton' is defined but never used.","'MapCanvas' is assigned a value but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'setLogMessages' is assigned a value but never used.","'setEncounters' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'encounters'. Either include it or remove the dependency array.",["319"],"'AbilitySection' is defined but never used.","'settempvalues' is assigned a value but never used.","'setAbilityScores' is assigned a value but never used.","'setActions' is assigned a value but never used.","'Table' is defined but never used.","'setSpellInfo' is assigned a value but never used.","'setSpells' is assigned a value but never used.","'handleCast' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'createSpellSlots'. Either include it or remove the dependency array.",["320"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'setItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calculateWeight'. Either include it or remove the dependency array.",["321"],"'sectionorder' is assigned a value but never used.","'setSectionOrder' is assigned a value but never used.","'setFeaturesSections' is assigned a value but never used.","no-object-constructor",{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},"Update the dependencies array to be: [getAbilities]",{"range":"332","text":"333"},"Update the dependencies array to be: [keeprolls, rollresults, rollresultslist]",{"range":"334","text":"335"},"Update the dependencies array to be: [encounters]",{"range":"336","text":"337"},"Update the dependencies array to be: [createSpellSlots]",{"range":"338","text":"339"},"Update the dependencies array to be: [calculateWeight, items]",{"range":"340","text":"341"},[1240,1242],"[getAbilities]",[717,730],"[keeprolls, rollresults, rollresultslist]",[1357,1359],"[encounters]",[505,507],"[createSpellSlots]",[432,439],"[calculateWeight, items]"]