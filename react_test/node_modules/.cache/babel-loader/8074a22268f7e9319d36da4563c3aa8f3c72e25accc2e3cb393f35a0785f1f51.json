{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmi\\\\.projects\\\\questweaver_testing\\\\react_test\\\\src\\\\RollResultsSection.js\";\nimport { Component, memo } from \"react\";\nimport { useEffect } from 'react';\nimport SingleRollResult from './SingleRollResult';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000');\nclass RollResultsSection extends Component {\n  constructor(props) {\n    super(props);\n    this.callCheckAPI = this.displayRollResults.bind(this);\n    this.state = {\n      rolls: []\n    };\n  }\n  displayRollResults(name, rolltype, rollstring, rolltotal, basestring) {\n    //Add new single roll result with\n    console.log(`Name = ${name}, rolltype = ${rolltype}, rollstring = ${rollstring}, rolltotal = ${rolltotal}, basestring = ${basestring}`);\n  }\n\n  /*\r\n    getSkills() {\r\n      fetch(`http://localhost:9000/getcharacterinfo?infotype=skill`)\r\n          .then(res => res.json())\r\n          .then(res => this.setState({ checkResponse: res }));\r\n    }\r\n  \r\n  \r\n    \r\n      }, state);\r\n    componentDidMount () {\r\n      this.getSkills();\r\n    }\r\n  */\n  /*\r\n    useEffect(() => {\r\n        socket.on('rolldiceresult', (data) => {\r\n          rolls.append(data);\r\n      })}, [this.state.rolls]);\r\n  */\n\n  render() {\n    socket.on('rolldiceresult', data => {\n      this.state.rolls.append(data);\n    });\n    //console.log(`rollstring = ${this.state.checkResponse.rollstring}`)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"rollContainer\",\n      children: this.state.rolls.map(roll => /*#__PURE__*/_jsxDEV(SingleRollResult, {\n        name: roll.name,\n        rolltype: roll.rolltype,\n        rollstring: roll.rollstring,\n        basestring: roll.basestring,\n        rolltotal: roll.rolltotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\n;\nexport default _c = /*#__PURE__*/memo(RollResultsSection);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["Component","memo","useEffect","SingleRollResult","io","jsxDEV","_jsxDEV","socket","connect","RollResultsSection","constructor","props","callCheckAPI","displayRollResults","bind","state","rolls","name","rolltype","rollstring","rolltotal","basestring","console","log","render","on","data","append","id","children","map","roll","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cosmi/.projects/questweaver_testing/react_test/src/RollResultsSection.js"],"sourcesContent":["import { Component, memo } from \"react\";\r\nimport { useEffect } from 'react';\r\nimport SingleRollResult from './SingleRollResult';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io.connect('http://localhost:4000');\r\n\r\n\r\nclass RollResultsSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.callCheckAPI = this.displayRollResults.bind(this);\r\n    this.state = {\r\n      rolls: []\r\n      }\r\n    }\r\n \r\n    \r\n  \r\n\r\n  displayRollResults (name, rolltype, rollstring, rolltotal, basestring) {\r\n    //Add new single roll result with\r\n    console.log(`Name = ${name}, rolltype = ${rolltype}, rollstring = ${rollstring}, rolltotal = ${rolltotal}, basestring = ${basestring}`)\r\n  }\r\n\r\n/*\r\n  getSkills() {\r\n    fetch(`http://localhost:9000/getcharacterinfo?infotype=skill`)\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ checkResponse: res }));\r\n  }\r\n\r\n\r\n  \r\n    }, state);\r\n  componentDidMount () {\r\n    this.getSkills();\r\n  }\r\n*/\r\n/*\r\n  useEffect(() => {\r\n      socket.on('rolldiceresult', (data) => {\r\n        rolls.append(data);\r\n    })}, [this.state.rolls]);\r\n*/\r\n\r\n  render () {\r\n    socket.on('rolldiceresult', (data) => {\r\n      this.state.rolls.append(data);\r\n    });\r\n    //console.log(`rollstring = ${this.state.checkResponse.rollstring}`)\r\n    return (\r\n      <div id=\"rollContainer\">\r\n        {this.state.rolls.map((roll) => <SingleRollResult name={roll.name} rolltype={roll.rolltype} rollstring={roll.rollstring} basestring={roll.basestring} rolltotal={roll.rolltotal}/>)}\r\n      </div>  \r\n    );\r\n  }\r\n};\r\n\r\nexport default memo(RollResultsSection);"],"mappings":";AAAA,SAASA,SAAS,EAAEC,IAAI,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClC,MAAMC,MAAM,GAAGH,EAAE,CAACI,OAAO,CAAC,uBAAuB,CAAC;AAGlD,MAAMC,kBAAkB,SAAST,SAAS,CAAC;EACzCU,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAAC;IACtD,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE;IACP,CAAC;EACH;EAKFH,kBAAkBA,CAAEI,IAAI,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,UAAU,EAAE;IACrE;IACAC,OAAO,CAACC,GAAG,CAAE,UAASN,IAAK,gBAAeC,QAAS,kBAAiBC,UAAW,iBAAgBC,SAAU,kBAAiBC,UAAW,EAAC,CAAC;EACzI;;EAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;AACA;AACA;AACA;AACA;AACA;;EAEEG,MAAMA,CAAA,EAAI;IACRjB,MAAM,CAACkB,EAAE,CAAC,gBAAgB,EAAGC,IAAI,IAAK;MACpC,IAAI,CAACX,KAAK,CAACC,KAAK,CAACW,MAAM,CAACD,IAAI,CAAC;IAC/B,CAAC,CAAC;IACF;IACA,oBACEpB,OAAA;MAAKsB,EAAE,EAAC,eAAe;MAAAC,QAAA,EACpB,IAAI,CAACd,KAAK,CAACC,KAAK,CAACc,GAAG,CAAEC,IAAI,iBAAKzB,OAAA,CAACH,gBAAgB;QAACc,IAAI,EAAEc,IAAI,CAACd,IAAK;QAACC,QAAQ,EAAEa,IAAI,CAACb,QAAS;QAACC,UAAU,EAAEY,IAAI,CAACZ,UAAW;QAACE,UAAU,EAAEU,IAAI,CAACV,UAAW;QAACD,SAAS,EAAEW,IAAI,CAACX;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChL,CAAC;EAEV;AACF;AAAC;AAED,eAAAC,EAAA,gBAAenC,IAAI,CAACQ,kBAAkB,CAAC;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}