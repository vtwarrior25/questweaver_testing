{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmi\\\\.projects\\\\questweaver_testing\\\\react_test\\\\src\\\\RollResultsSection.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport SingleRollResult from './SingleRollResult';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RollResultsSection() {\n  _s();\n  const [rolllist, setRollList] = useState([{\n    rolls: [8],\n    rollstring: '8+2',\n    rolltotal: 10,\n    basestring: '1d20+2',\n    name: 'Constitution',\n    rolltype: 'Ability'\n  }, {\n    rolls: [8],\n    rollstring: '8+2',\n    rolltotal: 10,\n    basestring: '1d20+2',\n    name: 'Constitution',\n    rolltype: 'Ability'\n  }]);\n  const socket = io.connect('http://localhost:4000');\n  useEffect(() => {\n    socket.on('rolldiceresult', data => {\n      setRollList(...rolllist, data);\n      console.log(`Rolllist:  ${rolllist}`);\n      beans = 'Ye Ye brother';\n    });\n  });\n  //{rolllist.map((roll) => <SingleRollResult name={roll.name} rolltype={roll.rolltype} rollstring={roll.rollstring} basestring={roll.basestring} rolltotal={roll.rolltotal}/>)}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rollContainer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_s(RollResultsSection, \"6lwpIuoD8KHjhjiefy0p46u7BR8=\");\n_c = RollResultsSection;\nvar _c;\n$RefreshReg$(_c, \"RollResultsSection\");","map":{"version":3,"names":["useEffect","useState","SingleRollResult","io","jsxDEV","_jsxDEV","RollResultsSection","_s","rolllist","setRollList","rolls","rollstring","rolltotal","basestring","name","rolltype","socket","connect","on","data","console","log","beans","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cosmi/.projects/questweaver_testing/react_test/src/RollResultsSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport SingleRollResult from './SingleRollResult';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport default function RollResultsSection () {\r\n  const [rolllist, setRollList] = useState([\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    },\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    }\r\n  ]);\r\n  const socket = io.connect('http://localhost:4000');\r\n  \r\n\r\n  useEffect(() => {\r\n    socket.on('rolldiceresult', (data) => {\r\n      setRollList(...rolllist, data);\r\n      console.log(`Rolllist:  ${rolllist}`);\r\n      beans = 'Ye Ye brother'\r\n  })});\r\n//{rolllist.map((roll) => <SingleRollResult name={roll.name} rolltype={roll.rolltype} rollstring={roll.rollstring} basestring={roll.basestring} rolltotal={roll.rolltotal}/>)}\r\n\r\n  return (\r\n      <div id=\"rollContainer\">\r\n        \r\n      </div> \r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,SAASC,kBAAkBA,CAAA,EAAI;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CACvC;IACES,KAAK,EAAE,CAAE,CAAC,CAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,KAAK,EAAE,CAAE,CAAC,CAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,QAAQ;IACpBC,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;EACF,MAAMC,MAAM,GAAGb,EAAE,CAACc,OAAO,CAAC,uBAAuB,CAAC;EAGlDjB,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACE,EAAE,CAAC,gBAAgB,EAAGC,IAAI,IAAK;MACpCV,WAAW,CAAC,GAAGD,QAAQ,EAAEW,IAAI,CAAC;MAC9BC,OAAO,CAACC,GAAG,CAAE,cAAab,QAAS,EAAC,CAAC;MACrCc,KAAK,GAAG,eAAe;IAC3B,CAAC,CAAC;EAAA,CAAC,CAAC;EACN;;EAEE,oBACIjB,OAAA;IAAKkB,EAAE,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElB,CAAC;AAEZ;AAACpB,EAAA,CAnCuBD,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}