{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmi\\\\.projects\\\\questweaver_testing\\\\react_test\\\\src\\\\DiceRollButton.js\";\nimport React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:4000');\nclass DiceRollButton extends Component {\n  constructor(props) {\n    super(props);\n    this.callCheckAPI = this.callCheckAPI.bind(this);\n    this.rollDice = this.rollDice.bind(this);\n    this.state = {\n      checkResponse: {\n        rolls: [],\n        rollstring: \"\",\n        rolltotal: \"\",\n        basestring: \"\",\n        name: \"\",\n        rolltype: \"\"\n      },\n      data: {\n        name: this.props.name,\n        rolltype: this.props.rolltype,\n        die: this.props.die,\n        num: this.props.num,\n        mod: this.props.mod\n      }\n    };\n  }\n  rollDice() {\n    socket.emit('rolldice', this.state.data);\n  }\n  callCheckAPI() {\n    fetch(`http://localhost:9000/rollcheck?name=${this.props.name}&rolltype=${this.props.rolltype}&die=${this.props.die}&num=${this.props.num}&mod=${this.props.mod}`).then(res => res.json()).then(res => this.setState({\n      checkResponse: res\n    })).then(() => {\n      this.props.showrollresults(this.state.data);\n    });\n  }\n  render() {\n    //console.log(`rollstring = ${this.state.checkResponse.rollstring}`)\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        size: \"sm\",\n        onClick: this.callCheckAPI,\n        children: this.props.mod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.checkResponse.rolltotal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n;\nexport default DiceRollButton;","map":{"version":3,"names":["React","Component","Button","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","connect","DiceRollButton","constructor","props","callCheckAPI","bind","rollDice","state","checkResponse","rolls","rollstring","rolltotal","basestring","name","rolltype","data","die","num","mod","emit","fetch","then","res","json","setState","showrollresults","render","children","variant","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/cosmi/.projects/questweaver_testing/react_test/src/DiceRollButton.js"],"sourcesContent":["import React, { Component} from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport io from 'socket.io-client';\r\nconst socket = io.connect('http://localhost:4000');\r\n\r\n\r\nclass DiceRollButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.callCheckAPI = this.callCheckAPI.bind(this);\r\n    this.rollDice = this.rollDice.bind(this);\r\n    this.state = {\r\n      checkResponse: {\r\n        rolls: [],\r\n        rollstring: \"\",\r\n        rolltotal: \"\",\r\n        basestring: \"\",\r\n        name: \"\",\r\n        rolltype: \"\",\r\n      },\r\n      data: {\r\n        name: this.props.name, \r\n        rolltype: this.props.rolltype,\r\n        die: this.props.die,\r\n        num: this.props.num,\r\n        mod: this.props.mod\r\n      }\r\n    }\r\n  }\r\n\r\n  rollDice() {\r\n    socket.emit('rolldice', this.state.data);\r\n  }\r\n  \r\n  callCheckAPI() {\r\n    fetch(`http://localhost:9000/rollcheck?name=${this.props.name}&rolltype=${this.props.rolltype}&die=${this.props.die}&num=${this.props.num}&mod=${this.props.mod}`)\r\n        .then(res => res.json())\r\n        .then(res => this.setState({ checkResponse: res }))\r\n        .then(() => {this.props.showrollresults(this.state.data)});\r\n  }\r\n  \r\n  render (){\r\n    //console.log(`rollstring = ${this.state.checkResponse.rollstring}`)\r\n    return (\r\n      <>\r\n        <Button variant='secondary' size='sm' onClick={this.callCheckAPI}>{this.props.mod}</Button>\r\n        <div>{this.state.checkResponse.rolltotal}</div>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\n\r\nexport default DiceRollButton;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAO,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAE3C,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClC,MAAMC,MAAM,GAAGL,EAAE,CAACM,OAAO,CAAC,uBAAuB,CAAC;AAGlD,MAAMC,cAAc,SAAST,SAAS,CAAC;EACrCU,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACD,IAAI,CAAC,IAAI,CAAC;IACxC,IAAI,CAACE,KAAK,GAAG;MACXC,aAAa,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,EAAE;QACbC,UAAU,EAAE,EAAE;QACdC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,IAAI,EAAE;QACJF,IAAI,EAAE,IAAI,CAACV,KAAK,CAACU,IAAI;QACrBC,QAAQ,EAAE,IAAI,CAACX,KAAK,CAACW,QAAQ;QAC7BE,GAAG,EAAE,IAAI,CAACb,KAAK,CAACa,GAAG;QACnBC,GAAG,EAAE,IAAI,CAACd,KAAK,CAACc,GAAG;QACnBC,GAAG,EAAE,IAAI,CAACf,KAAK,CAACe;MAClB;IACF,CAAC;EACH;EAEAZ,QAAQA,CAAA,EAAG;IACTP,MAAM,CAACoB,IAAI,CAAC,UAAU,EAAE,IAAI,CAACZ,KAAK,CAACQ,IAAI,CAAC;EAC1C;EAEAX,YAAYA,CAAA,EAAG;IACbgB,KAAK,CAAE,wCAAuC,IAAI,CAACjB,KAAK,CAACU,IAAK,aAAY,IAAI,CAACV,KAAK,CAACW,QAAS,QAAO,IAAI,CAACX,KAAK,CAACa,GAAI,QAAO,IAAI,CAACb,KAAK,CAACc,GAAI,QAAO,IAAI,CAACd,KAAK,CAACe,GAAI,EAAC,CAAC,CAC7JG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAI,IAAI,CAACE,QAAQ,CAAC;MAAEhB,aAAa,EAAEc;IAAI,CAAC,CAAC,CAAC,CAClDD,IAAI,CAAC,MAAM;MAAC,IAAI,CAAClB,KAAK,CAACsB,eAAe,CAAC,IAAI,CAAClB,KAAK,CAACQ,IAAI,CAAC;IAAA,CAAC,CAAC;EAChE;EAEAW,MAAMA,CAAA,EAAG;IACP;IACA,oBACE9B,OAAA,CAAAE,SAAA;MAAA6B,QAAA,gBACE/B,OAAA,CAACH,MAAM;QAACmC,OAAO,EAAC,WAAW;QAACC,IAAI,EAAC,IAAI;QAACC,OAAO,EAAE,IAAI,CAAC1B,YAAa;QAAAuB,QAAA,EAAE,IAAI,CAACxB,KAAK,CAACe;MAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAC3FtC,OAAA;QAAA+B,QAAA,EAAM,IAAI,CAACpB,KAAK,CAACC,aAAa,CAACG;MAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAC/C,CAAC;EAEP;AACF;AAAC;AAGD,eAAejC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}