{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmi\\\\.projects\\\\questweaver_testing\\\\react_test\\\\src\\\\DiceRollButton.js\";\nimport React, { Component } from \"react\";\nimport App from \"./App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DiceRollButton extends Component {\n  constructor(props) {\n    super(props);\n    this.callCheckAPI = this.callCheckAPI.bind(this);\n    this.state = {\n      checkResponse: {\n        rolls: [],\n        rollstring: \"\",\n        rolltotal: \"beans\",\n        basestring: \"\",\n        name: \"\",\n        rolltype: \"\"\n      }\n    };\n  }\n  callCheckAPI() {\n    fetch(`http://localhost:9000/rollcheck?name=${this.state.checkVars.name}&rolltype=${this.state.checkVars.rolltype}&die=${this.state.checkVars.die}&num=${this.state.checkVars.num}&mod=${this.state.checkVars.mod}`).then(res => res.text()).then(res => this.setState({\n      checkResponse: res\n    }));\n  }\n  render() {\n    console.log(`rollstring = ${this.state.checkResponse.rollstring}`);\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.callCheckAPI,\n      children: this.state.checkResponse.rolltotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this);\n  }\n}\n;\nexport default DiceRollButton;","map":{"version":3,"names":["React","Component","App","jsxDEV","_jsxDEV","DiceRollButton","constructor","props","callCheckAPI","bind","state","checkResponse","rolls","rollstring","rolltotal","basestring","name","rolltype","fetch","checkVars","die","num","mod","then","res","text","setState","render","console","log","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/cosmi/.projects/questweaver_testing/react_test/src/DiceRollButton.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport App from \"./App\";\r\n\r\nclass DiceRollButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.callCheckAPI = this.callCheckAPI.bind(this);\r\n    this.state = {\r\n      checkResponse: {\r\n        rolls: [],\r\n        rollstring: \"\",\r\n        rolltotal: \"beans\",\r\n        basestring: \"\",\r\n        name: \"\",\r\n        rolltype: \"\",\r\n      }\r\n    }\r\n  }\r\n\r\n  callCheckAPI() {\r\n    fetch(`http://localhost:9000/rollcheck?name=${this.state.checkVars.name}&rolltype=${this.state.checkVars.rolltype}&die=${this.state.checkVars.die}&num=${this.state.checkVars.num}&mod=${this.state.checkVars.mod}`)\r\n        .then(res => res.text())\r\n        .then(res => this.setState({ checkResponse: res }));\r\n  }\r\n  \r\n  render (){\r\n    console.log(`rollstring = ${this.state.checkResponse.rollstring}`)\r\n    return (\r\n    <button onClick={this.callCheckAPI}>{this.state.checkResponse.rolltotal}</button>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DiceRollButton;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,cAAc,SAASJ,SAAS,CAAC;EACrCK,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;IAChD,IAAI,CAACC,KAAK,GAAG;MACXC,aAAa,EAAE;QACbC,KAAK,EAAE,EAAE;QACTC,UAAU,EAAE,EAAE;QACdC,SAAS,EAAE,OAAO;QAClBC,UAAU,EAAE,EAAE;QACdC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH;EAEAT,YAAYA,CAAA,EAAG;IACbU,KAAK,CAAE,wCAAuC,IAAI,CAACR,KAAK,CAACS,SAAS,CAACH,IAAK,aAAY,IAAI,CAACN,KAAK,CAACS,SAAS,CAACF,QAAS,QAAO,IAAI,CAACP,KAAK,CAACS,SAAS,CAACC,GAAI,QAAO,IAAI,CAACV,KAAK,CAACS,SAAS,CAACE,GAAI,QAAO,IAAI,CAACX,KAAK,CAACS,SAAS,CAACG,GAAI,EAAC,CAAC,CAC/MC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACC,GAAG,IAAI,IAAI,CAACE,QAAQ,CAAC;MAAEf,aAAa,EAAEa;IAAI,CAAC,CAAC,CAAC;EACzD;EAEAG,MAAMA,CAAA,EAAG;IACPC,OAAO,CAACC,GAAG,CAAE,gBAAe,IAAI,CAACnB,KAAK,CAACC,aAAa,CAACE,UAAW,EAAC,CAAC;IAClE,oBACAT,OAAA;MAAQ0B,OAAO,EAAE,IAAI,CAACtB,YAAa;MAAAuB,QAAA,EAAE,IAAI,CAACrB,KAAK,CAACC,aAAa,CAACG;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAEnF;AACF;AAAC;AAED,eAAe9B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}