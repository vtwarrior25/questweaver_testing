{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cosmi\\\\.projects\\\\questweaver_testing\\\\react_test\\\\src\\\\RollResultsSection.js\";\nimport { useEffect, useState } from 'react';\nimport SingleRollResult from './SingleRollResult';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RollResultsSection(showrollresults, rollresults) {\n  /*\r\n  const [rolllist, setRollList] = useState([\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    },\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    }\r\n  ]);\r\n  \r\n  const [beans, setBeans] = useState('Beans brother');\r\n  const socket = io.connect('http://localhost:4000');\r\n  */\n\n  /*useEffect(() => {\r\n    socket.on('rolldiceresult', (data) => {\r\n      \r\n      setRollList(...rolllist, data);\r\n      console.log(`Rolllist:  ${rolllist}`);\r\n      \r\n      setBeans('b');\r\n  })});\r\n  */\n  //{rolllist.map((roll) => <SingleRollResult name={roll.name} rolltype={roll.rolltype} rollstring={roll.rollstring} basestring={roll.basestring} rolltotal={roll.rolltotal}/>)}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rollContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: rollresults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_c = RollResultsSection;\nvar _c;\n$RefreshReg$(_c, \"RollResultsSection\");","map":{"version":3,"names":["useEffect","useState","SingleRollResult","io","jsxDEV","_jsxDEV","RollResultsSection","showrollresults","rollresults","id","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cosmi/.projects/questweaver_testing/react_test/src/RollResultsSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport SingleRollResult from './SingleRollResult';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nexport default function RollResultsSection (showrollresults, rollresults) {\r\n  /*\r\n  const [rolllist, setRollList] = useState([\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    },\r\n    {\r\n      rolls: [ 8 ],\r\n      rollstring: '8+2',\r\n      rolltotal: 10,\r\n      basestring: '1d20+2',\r\n      name: 'Constitution',\r\n      rolltype: 'Ability'\r\n    }\r\n  ]);\r\n  \r\n  const [beans, setBeans] = useState('Beans brother');\r\n  const socket = io.connect('http://localhost:4000');\r\n  */\r\n\r\n  /*useEffect(() => {\r\n    socket.on('rolldiceresult', (data) => {\r\n      \r\n      setRollList(...rolllist, data);\r\n      console.log(`Rolllist:  ${rolllist}`);\r\n      \r\n      setBeans('b');\r\n  })});\r\n  */\r\n//{rolllist.map((roll) => <SingleRollResult name={roll.name} rolltype={roll.rolltype} rollstring={roll.rollstring} basestring={roll.basestring} rolltotal={roll.rolltotal}/>)}\r\n\r\n  return (\r\n      <div id=\"rollContainer\">\r\n        <h1>{rollresults}</h1>\r\n      </div> \r\n  )\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,eAAe,SAASC,kBAAkBA,CAAEC,eAAe,EAAEC,WAAW,EAAE;EACxE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA;;EAEE,oBACIH,OAAA;IAAKI,EAAE,EAAC,eAAe;IAAAC,QAAA,eACrBL,OAAA;MAAAK,QAAA,EAAKF;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEZ;AAACC,EAAA,GAzCuBT,kBAAkB;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}